{"version":3,"file":"static/js/557.ed0bc3b0.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js","components/RegisterForm/SignUp.jsx","pages/Register.jsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return {\n    ...(ownerState.underline === 'none' && {\n      textDecoration: 'none'\n    }),\n    ...(ownerState.underline === 'hover' && {\n      textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline'\n      }\n    }),\n    ...(ownerState.underline === 'always' && {\n      textDecoration: 'underline',\n      ...(ownerState.color !== 'inherit' && {\n        textDecorationColor: getTextDecoration({\n          theme,\n          ownerState\n        })\n      }),\n      '&:hover': {\n        textDecorationColor: 'inherit'\n      }\n    }),\n    // Same reset as ButtonBase.root\n    ...(ownerState.component === 'button' && {\n      position: 'relative',\n      WebkitTapHighlightColor: 'transparent',\n      backgroundColor: 'transparent',\n      // Reset default value\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      border: 0,\n      margin: 0,\n      // Remove the margin in Safari\n      borderRadius: 0,\n      padding: 0,\n      // Remove the padding in Firefox\n      cursor: 'pointer',\n      userSelect: 'none',\n      verticalAlign: 'middle',\n      MozAppearance: 'none',\n      // Reset\n      WebkitAppearance: 'none',\n      // Reset\n      '&::-moz-focus-inner': {\n        borderStyle: 'none' // Remove Firefox dotted outline.\n      },\n\n      [`&.${linkClasses.focusVisible}`]: {\n        outline: 'auto'\n      }\n    })\n  };\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit',\n    sx,\n    ...other\n  } = props;\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = {\n    ...props,\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, {\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])],\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { useNavigate } from 'react-router-dom';\n\nimport { register } from 'redux/auth/auth.thunk';\nimport { useDispatch } from 'react-redux';\n\nconst theme = createTheme();\n\nexport default function SignUp() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    dispatch(\n      register({\n        name: data.get('name'),\n        email: data.get('email'),\n        password: data.get('password'),\n      })\n    );\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete=\"given-name\"\n                  name=\"name\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"Username\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"E-mail Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password (7 symbols)\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link onClick={() => navigate('/login')} variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import SignUp from 'components/RegisterForm/SignUp';\n\nconst Register = () => {\n  return (\n    <>\n      <SignUp />\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","error","theme","ownerState","transformedColor","color","transformDeprecatedColors","getPath","channelColor","alpha","LinkRoot","styled","Typography","name","overridesResolver","props","styles","root","capitalize","underline","component","button","textDecoration","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","React","inProps","ref","useThemeProps","className","onBlur","onFocus","TypographyClasses","variant","sx","other","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","event","current","Object","keys","includes","Array","isArray","createTheme","SignUp","navigate","useNavigate","dispatch","useDispatch","ThemeProvider","Container","maxWidth","CssBaseline","Box","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","noValidate","onSubmit","preventDefault","data","FormData","currentTarget","register","get","email","password","mt","Grid","container","spacing","item","xs","TextField","autoComplete","required","fullWidth","id","label","autoFocus","type","Button","mb","justifyContent","onClick"],"sourceRoot":""}